---
import { nav } from '@data/links.json'

const normalizePath = (path) => (path.length > 1 && path.endsWith('/')) ? path.slice(0, -1) : path;
const currentPathname = normalizePath(Astro.url.pathname);
---
<nav class="navbar is-primary" role="navigation" aria-label="main navigation">
	<div class="navbar-brand">
		<a class="navbar-item" href="/">
			<img src="/images/logo.svg" alt="UAIS Logo" width="48" height="48">
			<span class="is-size-4 px-2 has-text-white has-text-weight-bold">UAIS</span>
		</a>
		<button class="navbar-burger burger" aria-label="menu" aria-expanded="false" data-target="navbarMenu">
			<span aria-hidden="true"></span>
			<span aria-hidden="true"></span>
			<span aria-hidden="true"></span>
		</button>
	</div>

	<div id="navbarMenu" class="navbar-menu">
		<ul class="navbar-end">
			{nav.map(item => {
				if (item.submenu) {
					// --- ACCESSIBLE DROPDOWN ---
					const isDropdownActive = item.submenu.some(sublink => normalizePath(sublink.link) === currentPathname);
					return (
						// REMOVED: 'is-hoverable'. This makes the dropdown click-only.
						<li class:list={["navbar-item", "has-dropdown", { "is-active": isDropdownActive }]}>
							<a class="navbar-link" href="#" role="button" aria-haspopup="true" aria-expanded="false">
								{item.icon && <span class="icon"><i class={item.icon}></i></span>}
								<span>{item.text}</span>
							</a>
							<ul class="navbar-dropdown is-boxed">
								{item.submenu.map(sublink => {
									const isLinkActive = normalizePath(sublink.link) === currentPathname;
									return (
										<li>
											<a href={sublink.link} target={sublink.target || null} class:list={['navbar-item', { 'is-active': isLinkActive }]} aria-current={isLinkActive ? 'page' : false}>
												{sublink.icon && <span class="icon"><i class={sublink.icon}></i></span>}
												<span>{sublink.text}</span>
											</a>
										</li>
									);
								})}
							</ul>
						</li>
					);
				} else {
					// --- ACCESSIBLE REGULAR LINK ---
					const isLinkActive = currentPathname === item.link;
					return (
						<li class="navbar-item">
							<a href={item.link} target={item.target || null} class:list={[{ 'is-active': isLinkActive }]} aria-current={isLinkActive ? 'page' : false}>
								{item.icon && <span class="icon"><i class={item.icon}></i></span>}
								<span>{item.text}</span>
							</a>
						</li>
					);
				}
			})}
		</ul>
	</div>
</nav>

<style is:global>
	/* --- SIMPLIFIED CSS --- */
	/* 1. By default, hide dropdowns */
	.navbar-item.has-dropdown:not(.is-active) .navbar-dropdown {
		display: none;
	}

	/* 2. On mobile AND desktop, show when the parent is-active (toggled by JS) */
	.navbar-item.has-dropdown.is-active .navbar-dropdown {
		display: block;
	}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    // Burger menu script
    const burger = document.querySelector('.navbar-burger');
    const menu = document.querySelector('.navbar-menu');
    if (burger && menu) {
        burger.addEventListener('click', () => {
            const isActive = burger.classList.toggle('is-active');
            menu.classList.toggle('is-active');
            burger.setAttribute('aria-expanded', String(isActive));
        });
    }

    // Accessible dropdown script (now works for all devices)
    const dropdowns = document.querySelectorAll('.navbar-item.has-dropdown');
    dropdowns.forEach(dropdown => {
        const trigger = dropdown.querySelector('a.navbar-link');
        if (trigger) {
            trigger.addEventListener('click', (event) => {
                event.preventDefault(); 
                const parentLi = event.currentTarget.closest('.has-dropdown');
                const isActive = parentLi.classList.toggle('is-active');
                event.currentTarget.setAttribute('aria-expanded', String(isActive));
            });
        }
    });
});
</script>