# This is a basic workflow to help you get started with Actions
# Updated based on recommendations

name: Deploy Website

# Controls when the action will run. Triggers the workflow on push
# events but only for the master branch
on:
  push:
    branches: [ master ] # Or use 'main' if that's your default branch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x] # You can add other versions here if needed, e.g., [18.x, 20.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    # Updated to v4 for latest features and security
    - name: Checkout repository
      uses: actions/checkout@v4

    # Sets up Node.js environment
    # Updated to v4 to support the 'cache' input and get latest features/fixes
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm' # This input is now valid with v4

    # Installs dependencies using the lockfile for consistency
    - name: Install dependencies
      run: npm ci

    # Runs the build script defined in your package.json
    - name: Build project
      run: npm run build
      env:
        # Ensure API_KEY secret is correctly named in your repo settings
        PUBLIC_GOOGLE_CALENDAR: ${{ secrets.API_KEY }}
        # Add any other build-time environment variables here if needed
        # CI: true # Often useful for React/Vue/etc. build processes

    # Uploads the built artifact to S3
    # Updated from @master to a specific tag for stability (v1.3.3 is a recent tag)
    - name: Upload website to S3
      uses: shallwefootball/s3-upload-action@v1.3.3
      with:
        aws_key_id: ${{ secrets.aws_access_key_id }}
        aws_secret_access_key: ${{ secrets.aws_secret_access_key }}
        aws_bucket: ${{ secrets.bucket }}
        source_dir: 'dist' # Make sure 'dist' is your actual build output directory
        destination_dir: '' # Uploads to the root of the bucket

    # Invalidates CloudFront cache to serve the new version
    # Updated from v1.2 to v2.7 (a more recent version)
    - name: Invalidate CloudFront distribution
      uses: chetan/invalidate-cloudfront-action@v2.7
      env:
        DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
        PATHS: '/*' # Invalidates everything; adjust if needed for performance
        AWS_REGION: ${{ secrets.region }} # Make sure this secret is set
        AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}